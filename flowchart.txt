1. Importing the packages
2. Exploring the dataset 
	- Yield Prediction
	- Fertilizer Recommendation
3. Data processing
	- pandas dataframe
	- Dropping unwanted column

4. Visualization using seaborn & matplotlib
5. Label Encoding using LabelEncoder
6. Feature Selection
8. Splitting the data  X and Y 
9. Building the model

	- Fertilizer Recommendation
		- Decision Tree
		- LightGBM
		- XGBoost
		- AdaBoost
		- Random Forest
        - ExtraTree
        - Gradient Boosting
        - Bagging Classifier with RF
		- Stacking Classifier (DT + AB + XGB + LightGBM with RandomForest)
		- Voting Classifier (Bagging Classifier with RF + DecisionTree)

	- Yield Prediction
		- Decision Tree
		- LightGBM
		- XGBoost
		- AdaBoost
		- Random Forest
        - ExtraTree
        - Gradient Boosting
        - Bagging Classifier with RF
		- Stacking Classifier (DT + AB + XGB + LightGBM with RandomForest)

	
10. Training the model
11. Dumping the best model 



Flask Framework
----------------
 
12. Flask Framework with Sqlite for signup and signin
13. Importing the packages
14. User gives input as Feature Values 
15. The given input is preprocessed for prediction
16. Trained model is used for prediction
17. Final outcome is displayed through frontend


Extension
----------

In the base paper the author mentioned to use Yield Prediction and Fertilizer Recommendation using different models, and compared with Stacking 
ensemble model,

As an extension we can build the front end using the flask framework for user testing and with user authentication.
